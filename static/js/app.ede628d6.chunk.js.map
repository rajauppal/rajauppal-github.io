{"version":3,"sources":["constants/Colors.js","components/TabBarIcon.js","components/StyledText.js","screens/HomeScreen.js","screens/LinksScreen.js","navigation/BottomTabNavigator.js","navigation/LinkingConfiguration.js","App.js","hooks/useCachedResources.js","web-build/register-service-worker.js","assets/fonts/SpaceMono-Regular.ttf","assets/images/robot-prod.png"],"names":["TabBarIcon","props","Ionicons","name","size","style","marginBottom","color","focused","Colors","MonoText","Text","fontFamily","HomeScreen","View","styles","container","data","labels","datasets","strokeWidth","width","height","yAxisLabel","chartConfig","decimalPlaces","opacity","bezier","marginVertical","borderRadius","contentContainerStyle","contentContainer","welcomeContainer","Image","source","require","welcomeImage","getStartedContainer","DevelopmentModeNotice","getStartedText","codeHighlightContainer","homeScreenFilename","helpContainer","TouchableOpacity","onPress","handleHelpPress","helpLink","helpLinkText","tabBarInfoContainer","tabBarInfoText","navigationFilename","codeHighlightText","developmentModeText","WebBrowser","navigationOptions","header","StyleSheet","create","flex","backgroundColor","fontSize","lineHeight","textAlign","paddingTop","alignItems","marginTop","resizeMode","marginLeft","marginHorizontal","paddingHorizontal","position","bottom","left","right","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","paddingVertical","LinksScreen","state","isLoading","fetch","method","then","response","json","setState","groups","catch","finally","this","countries","Countries","map","x","y","label","Country","TotalConfirmed","OptionButton","key","Component","icon","isLastOption","option","lastOption","flexDirection","optionIconContainer","optionTextContainer","optionText","marginRight","borderWidth","hairlineWidth","borderBottomWidth","borderColor","alignSelf","BottomTab","createBottomTabNavigator","BottomTabNavigator","navigation","route","setOptions","headerTitle","getHeaderTitle","Navigator","initialRouteName","Screen","component","options","title","tabBarIcon","routes","index","prefixes","Linking","config","Root","path","screens","Home","Links","Stack","createStackNavigator","App","React","isLoadingComplete","setLoadingComplete","a","async","SplashScreen","Font","font","console","warn","useCachedResources","OS","StatusBar","barStyle","NavigationContainer","linking","LinkingConfiguration","navigator","window","addEventListener","serviceWorker","register","scope","info","error","module","exports"],"mappings":"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","file":"static/js/app.ede628d6.chunk.js","sourcesContent":["const tintColor = '#2f95dc';\n\nexport default {\n  tintColor,\n  tabIconDefault: '#ccc',\n  tabIconSelected: tintColor,\n  tabBar: '#fefefe',\n  errorBackground: 'red',\n  errorText: '#fff',\n  warningBackground: '#EAEB5E',\n  warningText: '#666804',\n  noticeBackground: tintColor,\n  noticeText: '#fff',\n};\n","import { Ionicons } from '@expo/vector-icons';\nimport * as React from 'react';\n\nimport Colors from '../constants/Colors';\n\nexport default function TabBarIcon(props) {\n  return (\n    <Ionicons\n      name={props.name}\n      size={30}\n      style={{ marginBottom: -3 }}\n      color={props.focused ? Colors.tabIconSelected : Colors.tabIconDefault}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Text } from 'react-native';\n\nexport function MonoText(props) {\n  return <Text {...props} style={[props.style, { fontFamily: 'space-mono' }]} />;\n}\n","import * as WebBrowser from 'expo-web-browser';\nimport * as React from 'react';\nimport { Image, Platform, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport {\r\n    LineChart,\r\n    BarChart,\r\n    PieChart,\r\n    ProgressChart,\r\n    ContributionGraph,\r\n    StackedBarChart\r\n} from 'react-native-chart-kit'\n\nimport { MonoText } from '../components/StyledText';\n\nexport default function HomeScreen() {\n    const linedata = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June'],\r\n        datasets: [\r\n            {\r\n                data: [20, 45, 28, 80, 99, 43],\r\n                strokeWidth: 5, // optional\r\n            },\r\n        ],\r\n    };\n\n\n  return (\n      <View style={styles.container}>\n          <View>\r\n              <Text>\r\n                  Bezier Line Chart\r\n  </Text>\r\n              <LineChart\r\n                  data={linedata}\r\n                  width={500} // from react-native\r\n                  height={220}\r\n                  yAxisLabel={'$'}\r\n                  chartConfig={{\r\n                      decimalPlaces: 2, // optional, defaults to 2dp\r\n                      color: (opacity = 0) => `rgba(255, 255, 255, ${opacity})`,\r\n                   \r\n                  }}\r\n                  bezier\r\n                  style={{\r\n                      marginVertical: 8,\r\n                      borderRadius: 16\r\n                  }}\r\n              />\r\n          </View>\n      <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n        <View style={styles.welcomeContainer}>\n          <Image\n            source={\n              __DEV__\n                ? require('../assets/images/robot-dev.png')\n                : require('../assets/images/robot-prod.png')\n            }\n            style={styles.welcomeImage}\n          />\n        </View>\n\n        <View style={styles.getStartedContainer}>\n          <DevelopmentModeNotice />\n\n          <Text style={styles.getStartedText}>Open up the code for this screen:</Text>\n\n          <View style={[styles.codeHighlightContainer, styles.homeScreenFilename]}>\n            <MonoText>screens/HomeScreen.js</MonoText>\n          </View>\n\n          <Text style={styles.getStartedText}>\n            Change any of the text, save the file, and your app will automatically reload.\n          </Text>\n        </View>\n\n        <View style={styles.helpContainer}>\n          <TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\n            <Text style={styles.helpLinkText}>Help, it didn’t automatically reload!</Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n\n      <View style={styles.tabBarInfoContainer}>\n        <Text style={styles.tabBarInfoText}>This is a tab bar. You can edit it in:</Text>\n\n        <View style={[styles.codeHighlightContainer, styles.navigationFilename]}>\n          <MonoText style={styles.codeHighlightText}>navigation/BottomTabNavigator.js</MonoText>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nHomeScreen.navigationOptions = {\n  header: null,\n};\n\nfunction DevelopmentModeNotice() {\n  if (__DEV__) {\n    const learnMoreButton = (\n      <Text onPress={handleLearnMorePress} style={styles.helpLinkText}>\n        Learn more\n      </Text>\n    );\n\n    return (\n      <Text style={styles.developmentModeText}>\n        Development mode is enabled: your app will be slower but you can use useful development\n        tools. {learnMoreButton}\n      </Text>\n    );\n  } else {\n    return (\n      <Text style={styles.developmentModeText}>\n        You are not in development mode: your app will run at full speed.\n      </Text>\n    );\n  }\n}\n\nfunction handleLearnMorePress() {\n  WebBrowser.openBrowserAsync('https://docs.expo.io/versions/latest/workflow/development-mode/');\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/versions/latest/get-started/create-a-new-app/#making-your-first-change'\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center',\n  },\n  contentContainer: {\n    paddingTop: 30,\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10,\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)',\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  tabBarInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 20,\n      },\n    }),\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20,\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center',\n  },\n  navigationFilename: {\n    marginTop: 5,\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { Ionicons } from '@expo/vector-icons';\nimport * as WebBrowser from 'expo-web-browser';\nimport { StyleSheet, Text, View, FlatList } from 'react-native';\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\nimport React, { Component } from 'react';\r\n\nexport default class LinksScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        await fetch('https://api.covid19api.com/summary',\r\n            {\r\n                method: 'get'\r\n            })\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                //console.log(json);\r\n                this.setState({ groups: json });\r\n                //alert(this.state.groups);\r\n            })\r\n            .catch(\r\n                //(error) => console.error(error)\r\n            )\r\n            .finally(() => {\r\n                this.setState({ isLoading: false });\r\n            });\r\n    }\r\n\n    render() {\n        const { groups, isLoading } = this.state;\r\n\n        if (!groups)\n            return (<ScrollView />);\n\n        //return (<ScrollView/>);\n        \n        var countries = groups.Countries.map((x, y) => {\n            var label = x.Country + \" - \" + x.TotalConfirmed;\n            return (\n                <OptionButton key={x.Country}\n                    label={label}\n                />\n            );\r\n        });\n\n        //console.log()\n        return (<ScrollView>\n            \n            {countries}\r\n            \n        </ScrollView>);\n       \n        \n\n        return (<FlatList\r\n            data={groups.Global.Countries}\r\n            keyExtractor={({ id }, index) => id}\r\n            renderItem={({ item }) => (\r\n                <Text>Hello </Text>\r\n            )}\r\n        />);\n\n        \n\n\n        return (\n            <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n                \n                \n                <OptionButton\n                    icon=\"md-school\"\n                    label=\"Read the Expo documentation\"\n                    onPress={() => WebBrowser.openBrowserAsync('https://docs.expo.io')}\n                />\n\n                <OptionButton\n                    icon=\"md-compass\"\n                    label=\"Read the React Navigation documentation\"\n                    onPress={() => WebBrowser.openBrowserAsync('https://reactnavigation.org')}\n                />\n\n                <OptionButton\n                    icon=\"ios-chatboxes\"\n                    label=\"Ask a question on the forums\"\n                    onPress={() => WebBrowser.openBrowserAsync('https://forums.expo.io')}\n                    isLastOption\n                />\n            </ScrollView>\n        );\r\n    }\n}\n\nfunction OptionButton({ icon, label, onPress, isLastOption }) {\n  return (\n    <RectButton style={[styles.option, isLastOption && styles.lastOption]} onPress={onPress}>\n      <View style={{ flexDirection: 'row' }}>\n        <View style={styles.optionIconContainer}>\n          <Ionicons name={icon} size={22} color=\"rgba(0,0,0,0.35)\" />\n        </View>\n        <View style={styles.optionTextContainer}>\n          <Text style={styles.optionText}>{label}</Text>\n        </View>\n      </View>\n    </RectButton>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa',\n  },\n  contentContainer: {\n    paddingTop: 15,\n  },\n  optionIconContainer: {\n    marginRight: 12,\n  },\n  option: {\n    backgroundColor: '#fdfdfd',\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: 0,\n    borderColor: '#ededed',\n  },\n  lastOption: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n  },\n  optionText: {\n    fontSize: 15,\n    alignSelf: 'flex-start',\n    marginTop: 1,\n  },\n});\n","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\n\nimport TabBarIcon from '../components/TabBarIcon';\nimport HomeScreen from '../screens/HomeScreen';\nimport LinksScreen from '../screens/LinksScreen';\n\nconst BottomTab = createBottomTabNavigator();\nconst INITIAL_ROUTE_NAME = 'Home';\n\nexport default function BottomTabNavigator({ navigation, route }) {\n  // Set the header title on the parent stack navigator depending on the\n  // currently active tab. Learn more in the documentation:\n  // https://reactnavigation.org/docs/en/screen-options-resolution.html\n  navigation.setOptions({ headerTitle: getHeaderTitle(route) });\n\n  return (\n    <BottomTab.Navigator initialRouteName={INITIAL_ROUTE_NAME}>\n      <BottomTab.Screen\n        name=\"Home\"\n        component={HomeScreen}\n        options={{\n          title: 'Get Started',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-code-working\" />,\n        }}\n      />\n          <BottomTab.Screen\n              name=\"Home2\"\n              component={HomeScreen}\n              options={{\n                  title: 'Get Started',\n                  tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-code-working\" />,\n              }}\n          />\n          <BottomTab.Screen\n        name=\"Links\"\n        component={LinksScreen}\n        options={{\n          title: 'Resources',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-book\" />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\nfunction getHeaderTitle(route) {\n  const routeName = route.state?.routes[route.state.index]?.name ?? INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case 'Home':\n      return 'How to get started';\n    case 'Links':\n      return 'Links to learn more';\n  }\n}\n","import * as Linking from 'expo-linking';\n\nexport default {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    Root: {\n      path: 'root',\n      screens: {\n        Home: 'home',\n        Links: 'links',\n      },\n    },\n  },\n};\n","import { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { Platform, StatusBar, StyleSheet, View } from 'react-native';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport BottomTabNavigator from './navigation/BottomTabNavigator';\nimport LinkingConfiguration from './navigation/LinkingConfiguration';\n\nconst Stack = createStackNavigator();\n\nexport default function App(props) {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <View style={styles.container}>\n        {Platform.OS === 'ios' && <StatusBar barStyle=\"dark-content\" />}\n        <NavigationContainer linking={LinkingConfiguration}>\n          <Stack.Navigator>\n            <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/rajauppal-github.io/expo-service-worker.js', { scope: '/rajauppal-github.io/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/robot-prod.c7578911.png\";"],"sourceRoot":""}